<?php
 namespace Comproso\Framework\Contracts;

 /**
  *	Definition for Elements.
  *
  *	This file defines the minimum requirements for Elements (i.e., test items/types).
  *  Comproso expects Elements to respond to *data implementation*, *element generation*,
  *  and *template definition*.
  *
  *	@copyright License Copyright (C) 2016-2017 Thiemo Kunze <kunze (at) wangaz (dot) com>
  *
  *	@license AGPL-3.0
  *
  */
 interface ElementContract
 {
	 /**
    *   Implementation of given information.
    *
    *   This function is used to create a specific element based on the Element represented
    *   by this interface. For example, an Element (type) questionnaire is used, then this
    *   function will be used during test import to create a questionnaire item that will
    *   contain given $data.
    *
    *   @param array|object   $data   provides a data row that includes all available information
    *   for the specific element.
    *
    *   @return boolean return if implementation was (not) succesful.
    */
	 public function implement($data);

	 /**
    *   Generation of a specific Element.
    *
    *   This function is used to generate a specific Element and therefore to prepare an
    *   Element to be presented on the web browser (i.e., do the basic rendering).
    *
    *   @param array|object|null    $cache    providing cached or previous results/information of this element.
    *
    *   @return object    expects to return a freshly generated (i.e., using 'new') Element.
    */
	 public function generate($cache = null);

	 // Element proceeding
	 #public function proceed();

	 /**
    *   Providing default template information.
    *
    *   This function provides information about the default template. It will become obsolete in
    *   future versions of comproso.
    *
    *   @return string    template name.
    *
    *   @deprecated 0.8 This function will be deprecated from version 0.8.
    *
    */
	 public function template();
 }

